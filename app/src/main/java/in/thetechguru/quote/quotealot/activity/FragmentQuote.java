package in.thetechguru.quote.quotealot.activity;

import android.arch.lifecycle.LifecycleFragment;
import android.arch.lifecycle.Observer;
import android.arch.lifecycle.ViewModelProviders;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import java.util.List;

import in.thetechguru.quote.quotealot.Constants.Constants;
import in.thetechguru.quote.quotealot.R;
import in.thetechguru.quote.quotealot.adapter.AdapterQuotes;
import in.thetechguru.quote.quotealot.viewmodel.POJO.Quote;
import in.thetechguru.quote.quotealot.viewmodel.QuoteViewModel;

/**
 * Created by AB on 6/24/2017.
 */

public class FragmentQuote extends LifecycleFragment{

    private QuoteViewModel quoteViewModel; //data model
    private SwipeRefreshLayout swipeRefreshLayout;  //swipe to refresh data
    private RecyclerView recyclerView;
    private AdapterQuotes adapterQuotes;

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_quote,container,false);
        recyclerView = (RecyclerView) view.findViewById(R.id.recycler_view_quotes);
        swipeRefreshLayout = (SwipeRefreshLayout) view.findViewById(R.id.swipe_to_refresh);
        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                //changes will be reflected automatically, thanks to LiveData
                quoteViewModel.refreshData();
            }
        });

        //set up recycler view
        adapterQuotes = new AdapterQuotes(getContext());
        recyclerView.setAdapter(adapterQuotes);
        recyclerView.setLayoutManager(new WrapContentLinearLayoutManager(getContext()));

        return view;
    }

    @Override
    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);

        //create dataModel object
        //remember, doesn't matter how many times this method called, same object will be returned
        quoteViewModel = ViewModelProviders.of(this).get(QuoteViewModel.class);
        quoteViewModel.init( getArguments().getString(Constants.stringConstants.CATEGORY_ID), Constants.quoteParam.count);

        //observer data for any changes
        //no need to unregister this receiver anywhere, lifecycle aware components, duh
        quoteViewModel.getQuote().observe(this, new Observer<List<Quote>>() {
            @Override
            public void onChanged(@NonNull List<Quote> quote) {
                if(quote.size()==0) return;;

                adapterQuotes.insertItems(quote);
                recyclerView.scrollToPosition(0);

                if(swipeRefreshLayout.isRefreshing()){
                    swipeRefreshLayout.setRefreshing(false);
                }
            }
        });
    }

    //for catching exception generated by recycler view which was causing abend, no other way to handle this
    class WrapContentLinearLayoutManager extends LinearLayoutManager {
        WrapContentLinearLayoutManager(Context context) {
            super(context);
        }

        //... constructor
        @Override
        public void onLayoutChildren(RecyclerView.Recycler recycler, RecyclerView.State state) {
            try {
                super.onLayoutChildren(recycler, state);
            } catch (IndexOutOfBoundsException ignored) {
            }
        }
    }
}
